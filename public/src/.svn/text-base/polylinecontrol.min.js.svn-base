function PolylineControl(D){var A=this;A.type="polyline";A.name=A.type+"Control";A.zuper=null;A.digitizerShape=null;A.editLineHandler=null;A.endLineHandler=null;A.infoWindowHtml="";A.styles={standard:{}};A.storage=[];A.Options={button_opts:{img_up_url:"http://www.google.com/intl/en_us/mapfiles/ms/t/Blu.png",img_down_url:"http://www.google.com/intl/en_us/mapfiles/ms/t/Bld.png",name:"polyline",tooltip:"Draw a line"},position:{controlPosition:[210,3]},tooltip:{anchor:[-30,-8],cursor_on:"",cursor_off:"",titles:{start:"0ft<br/>Click to start drawing a line",middle:"&nbsp;<br/>Click to continue drawing a line",end:"&nbsp;<br/>Click a vertex once, or double click on the map to end this line"},callback:function(F,E){if(A.digitizerShape.getVertexCount()>0){E.childNodes[0].data=A.zuper.convertFromMetric(A.digitizerShape.getVertex(A.digitizerShape.getVertexCount()-1).distanceFrom(F),A.digitizerShape.getLength())}}},newGeometryOptions:{strokeColor:"#0000FF",strokeWeight:3,strokeOpacity:0.25,opts:{clickable:true,geodesic:false}},multiEdit:false,htmlTemplateParams:{},cssId:"emmc-polygon",optionalGeometryListeners:null,autoSave:false,executeClassExtensions:true};if(typeof (D)!="undefined"){for(var C in D){if(typeof (D[C])==="object"){for(var B in D[C]){A.polygonOptions[C][B]=D[C][B]}}else{A.polygonOptions[C]=D[C]}}}else{}}PolylineControl.prototype=new GControl();PolylineControl.prototype.getDefaultPosition=function(){var A=this;return A.zuper.getDefaultPosition(A.Options.position)};PolylineControl.prototype.initialize=function(C){var B=this;B.container=document.createElement("div");B.container.id="mymaps-control-"+B.Options.button_opts.name;var A=B.zuper.createButton({controlName:B.name,button_opts:B.Options.button_opts,startDigitizing:function(){B.startDigitizing()},stopDigitizing:function(D){B.stopDigitizing(D)}});B.container.appendChild(A.img);C.getContainer().appendChild(B.container);B.runInitFunctions();return B.container};PolylineControl.prototype.runInitFunctions=function(){var A=this;A.tooltip();A.assembleInfoWindowHtml(A.Options.htmlTemplateParams);A.extendGPolyline();if(A.Options.executeClassExtensions){A.extendBaseClass()}};PolylineControl.prototype.startDigitizing=function(){var B=this,D=B.zuper,C=D.map,A=B.Options;B.tooltip.on(A.tooltip.titles["start"],A.tooltip.callback);B.digitizerShape=B.newGPolyline([],A.newGeometryOptions);C.addOverlay(B.digitizerShape);B.digitizerShape.enableDrawing({});B.editLineHandler=GEvent.addListener(B.digitizerShape,"lineupdated",function(){switch(B.digitizerShape.getVertexCount()){case 2:B.tooltip.tooltipContainer.innerHTML=A.tooltip.titles["middle"];break;case 3:B.tooltip.tooltipContainer.innerHTML=A.tooltip.titles["end"];break}});GEvent.addListener(B.digitizerShape,"cancelline",function(){B.stopDigitizing()});B.endLineHandler=GEvent.addListener(B.digitizerShape,"endline",function(H){var G=[];for(var F=0;F<B.digitizerShape.getVertexCount();F++){G[F]=B.digitizerShape.getVertex(F)}var E=B.createPolyline(G,B.infoWindowHtml);C.addOverlay(E);if(!A.multiEdit){B.stopDigitizing();GEvent.trigger(E,"click")}else{}})};PolylineControl.prototype.stopDigitizing=function(A){var B=this,D=B.zuper;try{GEvent.removeListener(B.endLineHandler)}catch(C){}B.tooltip.off();if(A!==false){D.toggleButtons()}D.setLocalTimeout(function(){if(B.digitizerShape){B.digitizerShape.disableEditing();D.map.removeOverlay(B.digitizerShape);B.digitizerShape=null}},500)};PolylineControl.prototype.tooltip=function(){var A=this;var B=A.zuper.tooltipFactory(A.Options.tooltip);A.tooltip=B;return B};PolylineControl.prototype.assembleInfoWindowHtml=function(B){var C=this,D=C.zuper,A=D.infoWindowHtmlTemplates;B=B||{};B["geometry_style_link"]=A["geometry_style_link_params"][0][C.type];C.infoWindowHtml=D.parseMicroTemplate("template_1",B,A["template_1"])+A["polyline_2"]};PolylineControl.prototype.createPolyline=function(I,E,J,D){var G=this,A=G.Options;var C=(typeof (J)==="number")?false:true;var F=(C)?G.storage.length:J;var B=D||A.newGeometryOptions;var H=G.newGPolyline(I,B);H.index=F;H.savedStyle=B;H.unsavedStyle={};G.addGeometryListeners(H,E);if(C){G.storage[F]=new G.zuper.beans.Geometry({type:G.type,geometry:H})}else{G.storage[F].geometry=H}return H};PolylineControl.prototype.addGeometryListeners=function(A,B){var C=this;A.enableEditing({onEvent:"mouseover"});A.disableEditing({onEvent:"mouseout"});GEvent.addListener(A,"click",function(D){var E=D||A.getBounds().getCenter();C.zuper.map.openInfoWindowHtml(E,B);C.bindInfoWindow(A)});GEvent.addListener(A,"mouseover",function(){A.setStrokeStyle({opacity:(A.unsavedStyle.strokeOpacity||A.savedStyle.strokeOpacity)+0.3})});GEvent.addListener(A,"mouseout",function(){A.setStrokeStyle({opacity:(A.unsavedStyle.strokeOpacity||A.savedStyle.strokeOpacity)})});if(C.Options.optionalGeometryListeners){C.Options.optionalGeometryListeners()}return A};PolylineControl.prototype.hoverTooltip=function(){};PolylineControl.prototype.bindInfoWindow=function(A){var D=this,C=D.Options,B=A.index;var E=(D.zuper.isIE)?get$("msiwsi").childNodes[0].childNodes[0]:get$("msiwsi").childNodes[1].childNodes[0];E.style.backgroundColor=A.savedStyle.strokeColor;D.zuper.bindInfoWindow({index:B,storage:D.storage,geometryStyleFunc:function(){D.bindStyleInfoWindow(B)},undoStyling:function(){D.changeStyling(B,A.savedStyle);A.unsavedStyle={}},commitStyling:function(){for(var F in A.unsavedStyle){A.savedStyle[F]=A.unsavedStyle[F]}A.unsavedStyle={};for(var G in A.savedStyle){D.Options.newGeometryOptions[G]=A.savedStyle[G]}}})};PolylineControl.prototype.bindStyleInfoWindow=function(E){var G=this,F=G.zuper.Options.cssId;var H=G.storage[E].geometry;var B=H.savedStyle;var A=H.unsavedStyle;var I=get$(F+"-line-color");var D=get$(F+"-line-width");var C=get$(F+"-line-opacity");var J=get$(F+"-style");I.style.backgroundColor=A.strokeColor||B.strokeColor;D.value=H.getStrokeWeight();C.value=H.getStrokeOpacity();GEvent.addDomListener(I,"click",function(){G.zuper.showColorPicker({target:I,callback:function(K){G.changeStyling(E,{strokeColor:K})}})});GEvent.addDomListener(get$("emmc-geom-style-back"),"click",function(){G.changeStyling(E,{stroke:{color:B.strokeColor}});J.style.display="none"});GEvent.addDomListener(get$("emmc-msls-ok"),"click",function(){var K=parseInt(H.setStrokeWeight(D.value));G.changeStyling(E,{strokeWeight:K,strokeOpacity:H.setStrokeOpacity(C.value),strokeColor:I.style.backgroundColor});var L=(G.zuper.isIE)?get$("msiwsi").childNodes[0].childNodes[0]:get$("msiwsi").childNodes[1].childNodes[0];L.style.backgroundColor=I.style.backgroundColor;J.style.display="none"})};PolylineControl.prototype.changeStyling=function(D,I){var E=this;var F=E.storage[D].geometry;if(I){var H={},C=false;for(var A in I){if(A.indexOf("stroke")>-1){var G=A.replace("stroke","").toLowerCase();H[G]=C=I[A]}}if(C){F.setStrokeStyle(H)}for(var B in I){F.unsavedStyle[B]=I[B]}}};PolylineControl.prototype.loadPolylines=function(A){var C=this;var B=C.createPolyline(A.coordinates,C.infoWindowHtml,false,A.style);C.storage[B.index].title=[A.title,A.title];C.storage[B.index].description=[A.description,A.description];C.zuper.map.addOverlay(B);return B};PolylineControl.prototype.newGPolyline=function(B,A){return new GPolyline(B,A.strokeColor,A.strokeWeight,A.strokeOpacity,A.opts)};PolylineControl.prototype.extendGPolyline=function(){GPolyline.unsavedStyle={};GPolyline.savedStyle={};GPolyline.prototype.getStrokeWeight=function(){return(this.unsavedStyle.strokeWeight||this.savedStyle.strokeWeight)};GPolyline.prototype.setStrokeWeight=function(A){if(!isNaN(A)){this.unsavedStyle.strokeWeight=(A>20)?20:(A<1)?1:A}else{this.unsavedStyle.strokeWeight=this.savedStyle.strokeWeight}return this.unsavedStyle.strokeWeight||this.savedStyle.strokeWeight};GPolyline.prototype.getStrokeOpacity=function(){return(this.unsavedStyle.strokeOpacity||this.savedStyle.strokeOpacity)*100};GPolyline.prototype.setStrokeOpacity=function(B){if(!isNaN(B)){var A=(B>100)?100:(B<0)?0:B;this.unsavedStyle.strokeOpacity=A/100}else{this.unsavedStyle.strokeOpacity=this.savedStyle.strokeOpacity}return this.unsavedStyle.strokeOpacity||this.savedStyle.strokeOpacity}};PolylineControl.prototype.extendBaseClass=function(){var A=this,D=A.zuper,B=D.map;var C=function(){D.aop.addAfter(A,"addGeometryListeners",function(E){var F=E;var G=false;GEvent.addListener(F,"drag",function(){if(!G){A.tooltip.on();G=!G}A.tooltip.tooltipContainer.innerHTML=D.convertFromMetric(F.getLength())});GEvent.addListener(F,"dragend",function(){A.tooltip.off();G=!G})})}()}